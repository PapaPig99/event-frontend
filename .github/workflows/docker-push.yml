name: docker-push-frontend

on:
  push:
    branches: ["main"]
  pull_request:
  workflow_dispatch:

env:
  IMAGE_NAME: thitip/event-frontend
  APP_PORT: 5179            # ใช้พอร์ตที่โอกาสชนต่ำกว่า 8080

jobs:
  build_test_and_push:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Build image เข้า local daemon (ยังไม่ push)
      - name: Build image (load locally)
        uses: docker/build-push-action@v6
        with:
          context: .
          load: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # ตรวจไฟล์ build ใน image (เลี่ยง sh โดยใช้ --entrypoint)
      - name: Sanity check built files
        run: |
          docker run --rm --entrypoint ls \
            $IMAGE_NAME:${{ github.sha }} \
            -la /usr/share/nginx/html || true

      - name: Show nginx.conf (if present)
        run: |
          docker run --rm --entrypoint cat \
            $IMAGE_NAME:${{ github.sha }} \
            /etc/nginx/conf.d/default.conf || true

      # เคลียร์ container ชื่อเดิมทิ้งก่อน
      - name: Pre-clean container name
        run: docker rm -f app-under-test || true

      # สตาร์ทเว็บ: nginx ใน image ของคุณ listen 80 (จาก nginx.conf)
      - name: Run container (map $APP_PORT -> 80)
        run: |
          set -e
          docker run -d --rm --name app-under-test \
            -p $APP_PORT:80 \
            $IMAGE_NAME:${{ github.sha }}
          # ยืนยันว่ารันจริง
          docker inspect -f '{{.State.Status}}' app-under-test

      # รอเว็บขึ้น: ตรวจสถานะก่อน แล้วจึง curl
      - name: Wait for app to be ready
        shell: bash
        run: |
          set -e
          for i in {1..40}; do
            status=$(docker inspect -f '{{.State.Status}}' app-under-test || echo "missing")
            if [ "$status" != "running" ]; then
              echo "Container status: $status"
              docker logs app-under-test || true
              exit 1
            fi
            if curl -fsS "http://localhost:${APP_PORT}" >/dev/null; then
              echo "App is up on :${APP_PORT} (container port 80)"
              exit 0
            fi
            echo "Waiting for app... ($i/40)"
            sleep 2
          done
          echo "App did not start in time"
          docker logs app-under-test || true
          exit 2

      # รัน Cypress E2E (baseUrl ชี้ runner:port ที่ map ไว้)
      - name: Run Cypress tests
        uses: cypress-io/github-action@v6
        with:
          browser: chrome
          config: baseUrl=http://localhost:${{ env.APP_PORT }}
        env:
          CI: true

      # เก็บ log & ปิด container
      - name: Show container logs
        if: always()
        run: docker logs app-under-test || true

      - name: Stop container
        if: always()
        run: docker stop app-under-test || true

      # เทสผ่านแล้วค่อย push
      - name: Login Docker Hub
        if: success()
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push images
        if: success()
        run: |
          docker push $IMAGE_NAME:${{ github.sha }}
          docker push $IMAGE_NAME:latest
