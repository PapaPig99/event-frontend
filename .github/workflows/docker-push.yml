name: docker-push-frontend

on:
  push:
    branches: ["main"]
  pull_request:
  workflow_dispatch:

env:
  IMAGE_NAME: thitip/event-frontend
  APP_PORT: 8080

jobs:
  build_test_and_push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      # Build image เข้า local daemon เพื่อเอาไปรัน e2e (ยังไม่ push)
      - name: Build image (load locally)
        uses: docker/build-push-action@v6
        with:
          context: .
          load: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # รันคอนเทนเนอร์เว็บเพื่อลองเทส (สมมติ nginx ฟังที่ 80)
      - name: Run container for E2E
        run: |
          docker run -d --rm --name app-under-test \
            -p $APP_PORT:80 \
            $IMAGE_NAME:${{ github.sha }}

      - name: Wait for app to be ready
        run: |
          for i in {1..30}; do
            if curl -fsS "http://localhost:${APP_PORT}" >/dev/null; then
              echo "App is up"; exit 0
            fi
            echo "Waiting for app... ($i/30)"
            sleep 2
          done
          echo "App did not start in time" >&2
          docker logs app-under-test || true
          exit 1

      - name: Run Cypress E2E
        uses: cypress-io/github-action@v6
        with:
          browser: chrome
          config: baseUrl=http://localhost:${{ env.APP_PORT }}
        env:
          CI: true

      - name: Show container logs
        if: always()
        run: docker logs app-under-test || true

      - name: Stop container
        if: always()
        run: docker stop app-under-test || true

      # เทสผ่านแล้วค่อย login & push
      - name: Login Docker Hub
        if: success()
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push images
        if: success()
        run: |
          docker push $IMAGE_NAME:${{ github.sha }}
          docker push $IMAGE_NAME:latest
