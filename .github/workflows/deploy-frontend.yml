name: deploy-frontend

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  IMAGE_NAME: thitip/event-frontend    # image บน Docker Hub
  APP_DEPLOYMENT: frontend-deployment  # ชื่อตาม K8s Deployment
  K8S_NAMESPACE: ${{ secrets.KUBE_NAMESPACE }}

jobs:
  build_push_deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # --- Build & Push (คุณมีอยู่แล้ว ถ้าซ้ำก็ลบช่วงนี้ได้) ---
      - uses: docker/setup-buildx-action@v3

      - name: Login Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # --- ตั้งค่า kubectl จาก kubeconfig ใน Secrets ---
      - name: Setup kubectl
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > ~/.kube/config
          kubectl version --client=true
          kubectl config get-contexts

      - name: Ensure namespace exists
        run: kubectl create ns "$K8S_NAMESPACE" || true

      # apply ไฟล์ manifest พื้นฐาน (Deployment/Service/Ingress ฯลฯ)
      - name: Apply manifests
        run: kubectl -n "$K8S_NAMESPACE" apply -f k8s/

      # เปลี่ยน image เป็น tag ตาม commit (sha)
      - name: Set image to current commit
        run: |
          kubectl -n "$K8S_NAMESPACE" set image deployment/${{ env.APP_DEPLOYMENT }} \
            frontend=${{ env.IMAGE_NAME }}:${{ github.sha }}

      # รอ rollout จนสำเร็จ
      - name: Wait for rollout
        run: kubectl -n "$K8S_NAMESPACE" rollout status deployment/${{ env.APP_DEPLOYMENT }} --timeout=180s
